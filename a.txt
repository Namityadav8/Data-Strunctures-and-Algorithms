#include <iostream>
#include <vector>
#include <climits>
using namespace std;

int findMedian(const vector<vector<int>>& matrix) {
    int rows = matrix.size();
    int cols = matrix[0].size();
    int left = INT_MAX, right = INT_MIN;
    
    for(int i = 0; i < rows; ++i) {
        left = min(left, matrix[i][0]);
        right = max(right, matrix[i][cols - 1]);
    }
    
    int desired = (rows * cols + 1) / 2;
    while(left < right) {
        int mid = left + (right - left) / 2;
        int count = 0;
        
        for(int i = 0; i < rows; ++i) {
            count += upper_bound(matrix[i].begin(), matrix[i].end(), mid) - matrix[i].begin();
        }
        
        if(count < desired) {
            left = mid + 1;
        } else {
            right = mid;
        }
    }
    
    return left;
}

int main() {
    int rows, cols;
    cin >> rows >> cols;
    
    vector<vector<int>> matrix(rows, vector<int>(cols));
    for(int i = 0; i < rows; ++i) {
        for(int j = 0; j < cols; ++j) {
            cin >> matrix[i][j];
        }
    }
    
    int median = findMedian(matrix);
    cout << median << endl;
    
    return 0;
}
